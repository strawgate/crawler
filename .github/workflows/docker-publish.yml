name: Docker Publish

# Controls when the workflow will run
on:
  push:
    branches: [ '**' ] # Trigger on pushes to all branches
  pull_request:
    branches: [ '**' ] # Trigger on pull requests targeting any branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # Grant permissions for GITHUB_TOKEN to login to GHCR and read contents
    permissions:
      contents: read
      packages: write

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Log in to the GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # Use the automatically generated token

      # 3. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Extract metadata (tags, labels) for Docker
      # See: https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/strawgate/es-crawler # Target GHCR repository
          tags: |
            # tag specific events
            type=ref,event=branch # tag branch pushes with branch name
            type=ref,event=pr # tag PRs with pr-<number>
            # Add 'latest' tag for default branch pushes (assuming 'main')
            type=raw,value=latest,enable={{is_default_branch}}

      # 5. Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile # Use the standard Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}